diff --git a/web/viewer.mjs b/web/viewer.mjs
index c3d794a..9df6c47 100644
--- a/web/viewer.mjs
+++ b/web/viewer.mjs
@@ -13347,7 +13347,8 @@ const PDFViewerApplication = {
     const pdfRenderingQueue = new PDFRenderingQueue();
     pdfRenderingQueue.onIdle = this._cleanup.bind(this);
     this.pdfRenderingQueue = pdfRenderingQueue;
-    const pdfLinkService = new PDFLinkService({
+    const vscode = acquireVsCodeApi()
+    const pdfLinkService = new VSCodeLinkService(vscode, {
       eventBus,
       externalLinkTarget: AppOptions.get("externalLinkTarget"),
       externalLinkRel: AppOptions.get("externalLinkRel"),
@@ -15362,4 +15363,25 @@ var __webpack_exports__PDFViewerApplicationConstants = __webpack_exports__.PDFVi
 var __webpack_exports__PDFViewerApplicationOptions = __webpack_exports__.PDFViewerApplicationOptions;
 export { __webpack_exports__PDFViewerApplication as PDFViewerApplication, __webpack_exports__PDFViewerApplicationConstants as PDFViewerApplicationConstants, __webpack_exports__PDFViewerApplicationOptions as PDFViewerApplicationOptions };
 
-//# sourceMappingURL=viewer.mjs.map
\ No newline at end of file
+//# sourceMappingURL=viewer.mjs.map
+
+
+class VSCodeLinkService extends PDFLinkService {
+    #vscode
+    constructor(vscode, ...args){
+        super(...args)
+        this.#vscode = vscode
+    }
+
+    addLinkAttributes(link, url, newWindow = false){
+        if(typeof url === "string" && url.startsWith("https://file+.vscode-resource.vscode-cdn.net")){
+            link.onclick = () => {
+                this.#vscode.postMessage({
+                    open: url
+                });
+            };
+        } else {
+            return super.addLinkAttributes(link, url, newWindow)
+        }
+    }
+}
\ No newline at end of file
